{"remainingRequest":"/Users/danteri/Downloads/IT/my-mysic/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/danteri/Downloads/IT/my-mysic/src/components/Rock.vue?vue&type=style&index=0&id=40a6ce04&lang=scss&scoped=true&","dependencies":[{"path":"/Users/danteri/Downloads/IT/my-mysic/src/components/Rock.vue","mtime":1587054551443},{"path":"/Users/danteri/Downloads/IT/my-mysic/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/danteri/Downloads/IT/my-mysic/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/danteri/Downloads/IT/my-mysic/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/danteri/Downloads/IT/my-mysic/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/danteri/Downloads/IT/my-mysic/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/danteri/Downloads/IT/my-mysic/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoucm9jayB7CiAgZGlzcGxheTogZmxleDsKCiAgJi1jb250ZW50IHsKICAgIHBhZGRpbmc6IDE1cHg7CiAgICB3aWR0aDogNTAlOwogICAgZGlzcGxheTogZmxleDsKICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAgfQp9Cg=="},{"version":3,"sources":["Rock.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Rock.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"rock\">\n    <Sidebar />\n    <div class=\"rock-content\">\n      <Player v-if=\"render\" :songs=\"songsFilter\"/>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Sidebar from \"./Sidebar\";\nimport Player from \"./Player\";\nimport { mapMutations } from 'vuex';\n\nexport default {\n  name: \"Rock\",\n  components: { Sidebar, Player },\n  mounted() {\n    this.setStart()\n  },\n  data() {\n    return {\n      render: true\n    };\n  },\n  computed: {\n    songsFilter() {\n      return this.$store.state.songsFilter;\n    }\n  },\n  methods: {\n     ...mapMutations({\n      setStart: 'setStart'\n    }),\n  },\n  watch: {\n    songsFilter() {\n      this.render = false;\n      setTimeout(()=> {\n        this.render = true;\n      }, 0)\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.rock {\n  display: flex;\n\n  &-content {\n    padding: 15px;\n    width: 50%;\n    display: flex;\n    flex-direction: column;\n  }\n}\n</style>"]}]}